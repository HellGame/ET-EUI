//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System;


namespace ET
{
   
public partial class Tables
{   
    private System.Collections.Generic.Dictionary<string, IConfigCategory> tables;

    public Tables(System.Func<string, ByteBuf> loader)
    {
        tables = new System.Collections.Generic.Dictionary<string, IConfigCategory>();
        AIConfigCategory AIConfigCategory = new AIConfigCategory(loader("aiconfigcategory")); 
        tables.Add("AIConfigCategory", AIConfigCategory);
        UnitConfigCategory UnitConfigCategory = new UnitConfigCategory(loader("unitconfigcategory")); 
        tables.Add("UnitConfigCategory", UnitConfigCategory);

        PostInit();
        AIConfigCategory.Resolve(tables); 
        UnitConfigCategory.Resolve(tables); 
        PostResolve();
    }
    
    public void LoadOneConfig(Type type, Func<string, ByteBuf> loader)
    {
        tables[type.Name] = Activator.CreateInstance(type, loader(type.Name.ToString().ToLower())) as IConfigCategory;
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        AIConfigCategory.Instance.TranslateText(translator); 
        UnitConfigCategory.Instance.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}